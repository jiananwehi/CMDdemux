% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Classify.R
\name{AssignOutlierDrop}
\alias{AssignOutlierDrop}
\title{Assign outlier droplets}
\usage{
AssignOutlierDrop(md.mat, md_cut_q = 0.95, md_cut = NULL, md_auto = FALSE)
}
\arguments{
\item{md.mat}{Matrix of Mahalanobis distance from the output of the 
\link{CalculateMD} function.}

\item{md_cut_q}{Numeric; cut-off to determine outlier cells (negatives and doublets)
based on the quantile of Mahalanobis distance. This parameter is the same 
as in the \link{MDDensPlot} function and is indicated by the red line 
in its plot. Default is 0.95.}

\item{md_cut}{Numeric; cut-off to determine outlier cells (negatives and doublets)
based on the Mahalanobis distance directly. You only need to specify one of
\code{md_cut_q}, \code{md_cut}, or \code{md_auto} to determine the cut-offs.
This parameter is the same as in the \link{MDDensPlot} function and is 
indicated by the red line in its plot. Default is NULL.}

\item{md_auto}{Logical; whether to use an automatic method to determine cut-offs
of outlier cells (negatives and doublets). If TRUE, the 0.975 quantile of 
a chi-square distribution will be used as the cut-off. You only need to
specify one of \code{md_cut_q}, \code{md_cut}, or \code{md_auto}. Default 
is FALSE.}
}
\value{
A character vector, with one element per cell, indicating whether the 
cell is a "Singlet" or an "Outlier" (negatives or doublets).
}
\description{
Classify cells as singlets or outliers (negatives and doublets) based on Mahalanobis 
distance.
}
\details{
In automatic mode, it is assumed that the Mahalanobis distance follows a 
chi-square distribution with \eqn{N-1} degrees of freedom, where \eqn{N} is 
the number of hashtags. The cut-off is set at the 0.975 quantile of this distribution.

Cells with Mahalanobis distances larger than the cut-off, as determined by one of 
\code{md_cut_q}, \code{md_cut}, or \code{md_auto}, are classified as outlier cells 
(negatives and doublets). Others are singlets.
}
\examples{
\donttest{
hto.outlier.assign <- AssignOutlierDrop(hto.md.mat)
# Set the cut-off for outlier cells using the quantile of the Mahalanobis distance
hto.outlier.assign <- AssignOutlierDrop(hto.md.mat, md_cut_q = 0.52)
# Set the cut-off for outlier cells using the value of Mahalanobis distance directly
hto.outlier.assign <- AssignOutlierDrop(hto.md.mat, md_cut = 5)
# Set the cut-off for outlier cells using an automatic method
hto.outlier.assign <- AssignOutlierDrop(hto.md.mat, md_auto = TRUE)
head(hto.outlier.assign)
table(hto.outlier.assign)
}  

}
