% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Classify.R
\name{CMDdemuxClass}
\alias{CMDdemuxClass}
\title{Demultiplex cells}
\usage{
CMDdemuxClass(
  md.mat,
  hash.count,
  drop.outlier.assign,
  use_gex_data = FALSE,
  gex.count = NULL,
  num_modes = 3,
  cut_no = 2,
  lib_cut = NULL,
  optional = FALSE,
  kmed.cl = NULL,
  cluster.assign = NULL,
  clr.norm = NULL,
  unlabel_cl_cut = 0.5,
  unlabel_raw_cut = 4.6,
  unlabel_clr_cut = -0.5
)
}
\arguments{
\item{md.mat}{Matrix of Mahalanobis distance from the output of the 
\link{CalculateMD} function.}

\item{hash.count}{The raw hashing count matrix has rows representing hashtags 
and columns representing cells.}

\item{drop.outlier.assign}{A classification vector of outlier cells and singlets, 
from the output of the \link{AssignOutlierDrop} function.}

\item{use_gex_data}{Logical; whether to use gene expression data. It is recommended
to use gene expression data if available. Default is FALSE.}

\item{gex.count}{A gene expression count matrix with rows representing genes 
and columns representing cells. Only required when \code{use_gex_data} 
is TRUE. Default is NULL.}

\item{num_modes}{Integer; the number of modes (including antimodes) in the 
distribution of hashtag library size, used to determine the cut-off 
between negatives and doublets. This parameter can be visualized by the 
\link{OutlierHTOPlot} function. Default is 3.}

\item{cut_no}{Integer; the cut-off set at the \code{cut_no}th mode (including 
antimodes) of the hashtag library size distribution. This parameter can 
be visualized by the \link{OutlierHTOPlot} function. This number corresponds 
to the number shown on the red line in the plot. Default is 2.}

\item{lib_cut}{Double; the cut-off value set directly on hashtag library sizes. 
This parameter can be visualized by the \link{OutlierHTOPlot} function. 
It is an alternative to \code{cut_no}, and should only be specified when 
\code{num_modes} and \code{cut_no} do not provide an ideal cut-off. 
Default is NULL.}

\item{optional}{Logical; indicating whether optional (extra) clusters have been 
created. If TRUE, reclassification of cells in the extra cluster(s) will 
be performed. This parameter should match the \code{optional} parameter 
in the \link{KmedCluster} function. This parameter only works when 
\code{use_gex_data} is TRUE and \code{gex.count} is provided. Default 
is FALSE.}

\item{kmed.cl}{K-Medoids clustering results from the output of the 
\link{KmedCluster} function. This parameter only needs to be provided
when \code{optional} is TRUE. Default is NULL.}

\item{cluster.assign}{An integer vector indicating the corresponding hashtag 
for each cluster, with names of hashtags. This parameter comes from the
output of the \link{LabelClusterHTO} function. It only needs to be 
provided when \code{optional} is TRUE. Default is NULL.}

\item{clr.norm}{Local CLR-normalized data from the output of the 
\link{LocalCLRNorm} function. This parameter only needs to be provided 
when unlabelled hashtags exist in the data. Default is NULL.}

\item{unlabel_cl_cut}{Double; cut-off to determine unlabelled hashtag(s). 
Default is 0.5.}

\item{unlabel_raw_cut}{Double; cut-off of log raw hashtag counts to distinguish
negatives from singlets on unlabelled hashtag(s). Default is 4.6.}

\item{unlabel_clr_cut}{Double; cut-off of local CLR values on unlabelled 
hashtag(s) to distinguish negatives from singlets. Default is -0.5.}
}
\value{
A data frame of demultiplexing results, where rows represent cells 
and row names correspond to cell barcodes. The columns are:
\describe{
  \item{demux_id}{The hashtag assigned to the cell, defined as the one with the 
  minimum Mahalanobis distance.}
  \item{global_class}{Classification of each cell as a singlet, doublet, or negative.}
  \item{demux_global_class}{Demultiplexing result at the global level. Singlets 
  are named by their corresponding hashtag.}
  \item{doublet_class}{Demultiplexing result for doublets. Doublets are named by 
  the two hashtags with the minimum and second minimum Mahalanobis distances 
  for the cell.}
}
}
\description{
Determine the sample identity of each cell based on hashtag information. This
function further classfies outlier cells into negatives and doublets.
}
\details{
Theoretically, the log hashtag library sizes for outlier cells should be bimodally
distributed, with cells having smaller library sizes corresponding to negatives,
and those with larger library sizes corresponding to doublets. The 
\link{OutlierHTOPlot} function provides a visualization of the modes and antimodes 
of the distribution of hashtag library sizes for outlier cells. The parameter 
\code{num_modes} specifies the number of modes (including antimodes) applied to 
the distribution, and \code{cut_no} specifies the cut-off at the \code{cut_no}th 
mode (including antimodes) to separate negatives from doublets. Users can explore 
different settings by specifying varying numbers of modes in the 
\link{OutlierHTOPlot} function. The value of \code{cut_no} corresponds to the 
index of the red line(s) in the plot. Negatives are cells with hashtag library 
sizes smaller than the cut-off, while those with larger sizes are classified as 
doublets. 

It is recommended that users provide gene expression data for demultiplexing 
when available, since hashtag information alone can be limited. Gene expression 
data can be supplied using the \code{use_gex_data} and \code{gex.count} parameters. 
When gene expression data is provided, the median mRNA library size across singlets 
is used as a threshold. Initial negatives with mRNA library sizes larger than this 
threshold are reclassified as singlets, while initial doublets with mRNA library 
sizes smaller than the threshold are reclassified as singlets. 

If optional clustering has been performed, cells in extra clusters that do not 
belong to any hashtag will be reclassified. Two thresholds are used for doublets: 
(1) the 0.9 quantile of mRNA library sizes across all cells, and (2) the median 
mRNA library size across all initial doublets outside the extra clusters. Cells 
in the extra cluster with mRNA library sizes greater than either threshold are 
reclassified as doublets. The threshold for negatives is the median mRNA library 
size across all initial singlets outside the extra clusters. Cells in the extra 
cluster with mRNA library sizes smaller than this threshold are reclassified as 
negatives. All other cells in the extra cluster are classified as singlets. 

In the case of unlabelled hashtag(s), the first step is to examine whether such 
hashtag(s) exist. If any hashtag shows a local CLR difference between the top 
two clusters (highest and second highest local CLR values) smaller than the 
threshold \code{unlabel_cl_cut}, it is defined as an unlabelled hashtag. The 
next step is to rescue singlets from unlabelled hashtag(s). Initial negatives 
and initial singlets belonging to unlabelled hashtags are pooled together as 
temporary negatives. For each cell \eqn{c} in this group, the difference \eqn{D} 
between the local CLR value \eqn{h} of the unlabelled hashtag \eqn{u} and the 
maximum local CLR value among all hashtags is calculated as:
\eqn{D_c = h_{u,c} - \max_{i=1,...,N}(h_{i,c})}. 
The log expression value of the unlabelled hashtag, \eqn{\log(HTO_{u,c})}, is 
also recorded. Cells in the temporary negatives with \eqn{D} larger than 
\code{unlabel_clr_cut} and \eqn{\log(HTO_{u,c})} larger than \code{unlabel_raw_cut} 
are reclassified as singlets belonging to the unlabelled hashtag.
}
\examples{
\donttest{
# Gene expression data not available:
hto.cmddemux.assign <- CMDdemuxClass(hto.md.mat, hto.mtx, hto.outlier.assign)
hto.cmddemux.assign <- CMDdemuxClass(hto.md.mat, hto.mtx, hto.outlier.assign,
  num_modes = 20, cut_no = 26)
# Gene expression data is available:
hto.cmddemux.assign <- CMDdemuxClass(hto.md.mat, hto.mtx, hto.outlier.assign, 
  num_modes = 20, cut_no = 26, use_gex_data = TRUE, gex.count = hto.gex.count)
# Use HTO library size value directly to determine negatives and doublets:
hto.cmddemux.assign <- CMDdemuxClass(hto.md.mat, hto.mtx, hto.outlier.assign,
  lib_cut= 5.6, use_gex_data = TRUE, gex.count = hto.gex.count)
# Data with optional clustering:
hto.cmddemux.assign <- CMDdemuxClass(hto.md.mat, hto.mtx, hto.outlier.assign,
  num_modes = 7, cut_no = 4, use_gex_data = TRUE, gex.count = hto.gex.count, 
  optional = TRUE, kmed.cl = hto.kmed.cl, cluster.assign = hto.cluster.assign)
# Data with unlabelled hashtag(s):
hto.cmddemux.assign <- CMDdemuxClass(hto.md.mat, hto.mtx, hto.outlier.assign, 
  num_modes = 18, cut_no = 16, use_gex_data = TRUE, gex.count = hto.gex.count, 
  optional = TRUE, kmed.cl = hto.kmed.cl, cluster.assign = hto.cluster.assign,
  clr.norm = hto.clr.mtx, unlabel_cl_cut = 0.5, unlabel_raw_cut = 4.6, 
  unlabel_clr_cut = -0.5)
head(hto.cmddemux.assign)
} 

}
\references{
Ameijeiras-Alonso, J., Crujeiras, R. M., & Rodriguez-Casal, A. (2021). 
Multimode: an R package for mode assessment. Journal of Statistical Software, 97, 1-32.
}
